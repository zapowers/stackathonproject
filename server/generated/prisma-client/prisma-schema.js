module.exports = {
        typeDefs: // Code generated by Prisma (prisma@1.34.8). DO NOT EDIT.
  // Please don't change this file manually but run `prisma generate` to update it.
  // For more information, please read the docs: https://www.prisma.io/docs/prisma-client/

/* GraphQL */ `type AggregateCreature {
  count: Int!
}

type AggregateEncounter {
  count: Int!
}

type AggregateEncounterCreature {
  count: Int!
}

type AggregateParty {
  count: Int!
}

type AggregateSavedParty {
  count: Int!
}

type BatchPayload {
  count: Long!
}

type Creature {
  id: Int!
  armorClass: Int
  attackDiceType: Int
  attackHitDieNumber: Int
  attackNameAndType: String
  attackPointsAdd: Int
  eighthLevelSpells: Int
  encounterCreature(where: EncounterCreatureWhereInput, orderBy: EncounterCreatureOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EncounterCreature!]
  fifthLevelSpells: Int
  firstLevelSpells: Int
  fourthLevelSpells: Int
  hitDiceNumber: Int
  hitDiceType: Int
  hitPointsAdd: Int
  imageUrl: String
  initiativeBonus: Int
  movementSpeed: Int
  name: String!
  ninthLevelSpells: Int
  secondAttackDiceType: Int
  secondAttackHitDieNumber: Int
  secondAttackNameAndType: String
  secondAttackPointsAdd: Int
  secondLevelSpells: Int
  secondToHitBonus: Int
  seventhLevelSpells: Int
  sixthLevelSpells: Int
  spellAttack: Int
  spellSave: Int
  thirdLevelSpells: Int
  toHitBonus: Int
}

type CreatureConnection {
  pageInfo: PageInfo!
  edges: [CreatureEdge]!
  aggregate: AggregateCreature!
}

input CreatureCreateInput {
  armorClass: Int
  attackDiceType: Int
  attackHitDieNumber: Int
  attackNameAndType: String
  attackPointsAdd: Int
  eighthLevelSpells: Int
  encounterCreature: EncounterCreatureCreateManyInput
  fifthLevelSpells: Int
  firstLevelSpells: Int
  fourthLevelSpells: Int
  hitDiceNumber: Int
  hitDiceType: Int
  hitPointsAdd: Int
  imageUrl: String
  initiativeBonus: Int
  movementSpeed: Int
  name: String!
  ninthLevelSpells: Int
  secondAttackDiceType: Int
  secondAttackHitDieNumber: Int
  secondAttackNameAndType: String
  secondAttackPointsAdd: Int
  secondLevelSpells: Int
  secondToHitBonus: Int
  seventhLevelSpells: Int
  sixthLevelSpells: Int
  spellAttack: Int
  spellSave: Int
  thirdLevelSpells: Int
  toHitBonus: Int
}

type CreatureEdge {
  node: Creature!
  cursor: String!
}

enum CreatureOrderByInput {
  id_ASC
  id_DESC
  armorClass_ASC
  armorClass_DESC
  attackDiceType_ASC
  attackDiceType_DESC
  attackHitDieNumber_ASC
  attackHitDieNumber_DESC
  attackNameAndType_ASC
  attackNameAndType_DESC
  attackPointsAdd_ASC
  attackPointsAdd_DESC
  eighthLevelSpells_ASC
  eighthLevelSpells_DESC
  fifthLevelSpells_ASC
  fifthLevelSpells_DESC
  firstLevelSpells_ASC
  firstLevelSpells_DESC
  fourthLevelSpells_ASC
  fourthLevelSpells_DESC
  hitDiceNumber_ASC
  hitDiceNumber_DESC
  hitDiceType_ASC
  hitDiceType_DESC
  hitPointsAdd_ASC
  hitPointsAdd_DESC
  imageUrl_ASC
  imageUrl_DESC
  initiativeBonus_ASC
  initiativeBonus_DESC
  movementSpeed_ASC
  movementSpeed_DESC
  name_ASC
  name_DESC
  ninthLevelSpells_ASC
  ninthLevelSpells_DESC
  secondAttackDiceType_ASC
  secondAttackDiceType_DESC
  secondAttackHitDieNumber_ASC
  secondAttackHitDieNumber_DESC
  secondAttackNameAndType_ASC
  secondAttackNameAndType_DESC
  secondAttackPointsAdd_ASC
  secondAttackPointsAdd_DESC
  secondLevelSpells_ASC
  secondLevelSpells_DESC
  secondToHitBonus_ASC
  secondToHitBonus_DESC
  seventhLevelSpells_ASC
  seventhLevelSpells_DESC
  sixthLevelSpells_ASC
  sixthLevelSpells_DESC
  spellAttack_ASC
  spellAttack_DESC
  spellSave_ASC
  spellSave_DESC
  thirdLevelSpells_ASC
  thirdLevelSpells_DESC
  toHitBonus_ASC
  toHitBonus_DESC
}

type CreaturePreviousValues {
  id: Int!
  armorClass: Int
  attackDiceType: Int
  attackHitDieNumber: Int
  attackNameAndType: String
  attackPointsAdd: Int
  eighthLevelSpells: Int
  fifthLevelSpells: Int
  firstLevelSpells: Int
  fourthLevelSpells: Int
  hitDiceNumber: Int
  hitDiceType: Int
  hitPointsAdd: Int
  imageUrl: String
  initiativeBonus: Int
  movementSpeed: Int
  name: String!
  ninthLevelSpells: Int
  secondAttackDiceType: Int
  secondAttackHitDieNumber: Int
  secondAttackNameAndType: String
  secondAttackPointsAdd: Int
  secondLevelSpells: Int
  secondToHitBonus: Int
  seventhLevelSpells: Int
  sixthLevelSpells: Int
  spellAttack: Int
  spellSave: Int
  thirdLevelSpells: Int
  toHitBonus: Int
}

type CreatureSubscriptionPayload {
  mutation: MutationType!
  node: Creature
  updatedFields: [String!]
  previousValues: CreaturePreviousValues
}

input CreatureSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: CreatureWhereInput
  AND: [CreatureSubscriptionWhereInput!]
  OR: [CreatureSubscriptionWhereInput!]
  NOT: [CreatureSubscriptionWhereInput!]
}

input CreatureUpdateInput {
  armorClass: Int
  attackDiceType: Int
  attackHitDieNumber: Int
  attackNameAndType: String
  attackPointsAdd: Int
  eighthLevelSpells: Int
  encounterCreature: EncounterCreatureUpdateManyInput
  fifthLevelSpells: Int
  firstLevelSpells: Int
  fourthLevelSpells: Int
  hitDiceNumber: Int
  hitDiceType: Int
  hitPointsAdd: Int
  imageUrl: String
  initiativeBonus: Int
  movementSpeed: Int
  name: String
  ninthLevelSpells: Int
  secondAttackDiceType: Int
  secondAttackHitDieNumber: Int
  secondAttackNameAndType: String
  secondAttackPointsAdd: Int
  secondLevelSpells: Int
  secondToHitBonus: Int
  seventhLevelSpells: Int
  sixthLevelSpells: Int
  spellAttack: Int
  spellSave: Int
  thirdLevelSpells: Int
  toHitBonus: Int
}

input CreatureUpdateManyMutationInput {
  armorClass: Int
  attackDiceType: Int
  attackHitDieNumber: Int
  attackNameAndType: String
  attackPointsAdd: Int
  eighthLevelSpells: Int
  fifthLevelSpells: Int
  firstLevelSpells: Int
  fourthLevelSpells: Int
  hitDiceNumber: Int
  hitDiceType: Int
  hitPointsAdd: Int
  imageUrl: String
  initiativeBonus: Int
  movementSpeed: Int
  name: String
  ninthLevelSpells: Int
  secondAttackDiceType: Int
  secondAttackHitDieNumber: Int
  secondAttackNameAndType: String
  secondAttackPointsAdd: Int
  secondLevelSpells: Int
  secondToHitBonus: Int
  seventhLevelSpells: Int
  sixthLevelSpells: Int
  spellAttack: Int
  spellSave: Int
  thirdLevelSpells: Int
  toHitBonus: Int
}

input CreatureWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  armorClass: Int
  armorClass_not: Int
  armorClass_in: [Int!]
  armorClass_not_in: [Int!]
  armorClass_lt: Int
  armorClass_lte: Int
  armorClass_gt: Int
  armorClass_gte: Int
  attackDiceType: Int
  attackDiceType_not: Int
  attackDiceType_in: [Int!]
  attackDiceType_not_in: [Int!]
  attackDiceType_lt: Int
  attackDiceType_lte: Int
  attackDiceType_gt: Int
  attackDiceType_gte: Int
  attackHitDieNumber: Int
  attackHitDieNumber_not: Int
  attackHitDieNumber_in: [Int!]
  attackHitDieNumber_not_in: [Int!]
  attackHitDieNumber_lt: Int
  attackHitDieNumber_lte: Int
  attackHitDieNumber_gt: Int
  attackHitDieNumber_gte: Int
  attackNameAndType: String
  attackNameAndType_not: String
  attackNameAndType_in: [String!]
  attackNameAndType_not_in: [String!]
  attackNameAndType_lt: String
  attackNameAndType_lte: String
  attackNameAndType_gt: String
  attackNameAndType_gte: String
  attackNameAndType_contains: String
  attackNameAndType_not_contains: String
  attackNameAndType_starts_with: String
  attackNameAndType_not_starts_with: String
  attackNameAndType_ends_with: String
  attackNameAndType_not_ends_with: String
  attackPointsAdd: Int
  attackPointsAdd_not: Int
  attackPointsAdd_in: [Int!]
  attackPointsAdd_not_in: [Int!]
  attackPointsAdd_lt: Int
  attackPointsAdd_lte: Int
  attackPointsAdd_gt: Int
  attackPointsAdd_gte: Int
  eighthLevelSpells: Int
  eighthLevelSpells_not: Int
  eighthLevelSpells_in: [Int!]
  eighthLevelSpells_not_in: [Int!]
  eighthLevelSpells_lt: Int
  eighthLevelSpells_lte: Int
  eighthLevelSpells_gt: Int
  eighthLevelSpells_gte: Int
  encounterCreature_every: EncounterCreatureWhereInput
  encounterCreature_some: EncounterCreatureWhereInput
  encounterCreature_none: EncounterCreatureWhereInput
  fifthLevelSpells: Int
  fifthLevelSpells_not: Int
  fifthLevelSpells_in: [Int!]
  fifthLevelSpells_not_in: [Int!]
  fifthLevelSpells_lt: Int
  fifthLevelSpells_lte: Int
  fifthLevelSpells_gt: Int
  fifthLevelSpells_gte: Int
  firstLevelSpells: Int
  firstLevelSpells_not: Int
  firstLevelSpells_in: [Int!]
  firstLevelSpells_not_in: [Int!]
  firstLevelSpells_lt: Int
  firstLevelSpells_lte: Int
  firstLevelSpells_gt: Int
  firstLevelSpells_gte: Int
  fourthLevelSpells: Int
  fourthLevelSpells_not: Int
  fourthLevelSpells_in: [Int!]
  fourthLevelSpells_not_in: [Int!]
  fourthLevelSpells_lt: Int
  fourthLevelSpells_lte: Int
  fourthLevelSpells_gt: Int
  fourthLevelSpells_gte: Int
  hitDiceNumber: Int
  hitDiceNumber_not: Int
  hitDiceNumber_in: [Int!]
  hitDiceNumber_not_in: [Int!]
  hitDiceNumber_lt: Int
  hitDiceNumber_lte: Int
  hitDiceNumber_gt: Int
  hitDiceNumber_gte: Int
  hitDiceType: Int
  hitDiceType_not: Int
  hitDiceType_in: [Int!]
  hitDiceType_not_in: [Int!]
  hitDiceType_lt: Int
  hitDiceType_lte: Int
  hitDiceType_gt: Int
  hitDiceType_gte: Int
  hitPointsAdd: Int
  hitPointsAdd_not: Int
  hitPointsAdd_in: [Int!]
  hitPointsAdd_not_in: [Int!]
  hitPointsAdd_lt: Int
  hitPointsAdd_lte: Int
  hitPointsAdd_gt: Int
  hitPointsAdd_gte: Int
  imageUrl: String
  imageUrl_not: String
  imageUrl_in: [String!]
  imageUrl_not_in: [String!]
  imageUrl_lt: String
  imageUrl_lte: String
  imageUrl_gt: String
  imageUrl_gte: String
  imageUrl_contains: String
  imageUrl_not_contains: String
  imageUrl_starts_with: String
  imageUrl_not_starts_with: String
  imageUrl_ends_with: String
  imageUrl_not_ends_with: String
  initiativeBonus: Int
  initiativeBonus_not: Int
  initiativeBonus_in: [Int!]
  initiativeBonus_not_in: [Int!]
  initiativeBonus_lt: Int
  initiativeBonus_lte: Int
  initiativeBonus_gt: Int
  initiativeBonus_gte: Int
  movementSpeed: Int
  movementSpeed_not: Int
  movementSpeed_in: [Int!]
  movementSpeed_not_in: [Int!]
  movementSpeed_lt: Int
  movementSpeed_lte: Int
  movementSpeed_gt: Int
  movementSpeed_gte: Int
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  ninthLevelSpells: Int
  ninthLevelSpells_not: Int
  ninthLevelSpells_in: [Int!]
  ninthLevelSpells_not_in: [Int!]
  ninthLevelSpells_lt: Int
  ninthLevelSpells_lte: Int
  ninthLevelSpells_gt: Int
  ninthLevelSpells_gte: Int
  secondAttackDiceType: Int
  secondAttackDiceType_not: Int
  secondAttackDiceType_in: [Int!]
  secondAttackDiceType_not_in: [Int!]
  secondAttackDiceType_lt: Int
  secondAttackDiceType_lte: Int
  secondAttackDiceType_gt: Int
  secondAttackDiceType_gte: Int
  secondAttackHitDieNumber: Int
  secondAttackHitDieNumber_not: Int
  secondAttackHitDieNumber_in: [Int!]
  secondAttackHitDieNumber_not_in: [Int!]
  secondAttackHitDieNumber_lt: Int
  secondAttackHitDieNumber_lte: Int
  secondAttackHitDieNumber_gt: Int
  secondAttackHitDieNumber_gte: Int
  secondAttackNameAndType: String
  secondAttackNameAndType_not: String
  secondAttackNameAndType_in: [String!]
  secondAttackNameAndType_not_in: [String!]
  secondAttackNameAndType_lt: String
  secondAttackNameAndType_lte: String
  secondAttackNameAndType_gt: String
  secondAttackNameAndType_gte: String
  secondAttackNameAndType_contains: String
  secondAttackNameAndType_not_contains: String
  secondAttackNameAndType_starts_with: String
  secondAttackNameAndType_not_starts_with: String
  secondAttackNameAndType_ends_with: String
  secondAttackNameAndType_not_ends_with: String
  secondAttackPointsAdd: Int
  secondAttackPointsAdd_not: Int
  secondAttackPointsAdd_in: [Int!]
  secondAttackPointsAdd_not_in: [Int!]
  secondAttackPointsAdd_lt: Int
  secondAttackPointsAdd_lte: Int
  secondAttackPointsAdd_gt: Int
  secondAttackPointsAdd_gte: Int
  secondLevelSpells: Int
  secondLevelSpells_not: Int
  secondLevelSpells_in: [Int!]
  secondLevelSpells_not_in: [Int!]
  secondLevelSpells_lt: Int
  secondLevelSpells_lte: Int
  secondLevelSpells_gt: Int
  secondLevelSpells_gte: Int
  secondToHitBonus: Int
  secondToHitBonus_not: Int
  secondToHitBonus_in: [Int!]
  secondToHitBonus_not_in: [Int!]
  secondToHitBonus_lt: Int
  secondToHitBonus_lte: Int
  secondToHitBonus_gt: Int
  secondToHitBonus_gte: Int
  seventhLevelSpells: Int
  seventhLevelSpells_not: Int
  seventhLevelSpells_in: [Int!]
  seventhLevelSpells_not_in: [Int!]
  seventhLevelSpells_lt: Int
  seventhLevelSpells_lte: Int
  seventhLevelSpells_gt: Int
  seventhLevelSpells_gte: Int
  sixthLevelSpells: Int
  sixthLevelSpells_not: Int
  sixthLevelSpells_in: [Int!]
  sixthLevelSpells_not_in: [Int!]
  sixthLevelSpells_lt: Int
  sixthLevelSpells_lte: Int
  sixthLevelSpells_gt: Int
  sixthLevelSpells_gte: Int
  spellAttack: Int
  spellAttack_not: Int
  spellAttack_in: [Int!]
  spellAttack_not_in: [Int!]
  spellAttack_lt: Int
  spellAttack_lte: Int
  spellAttack_gt: Int
  spellAttack_gte: Int
  spellSave: Int
  spellSave_not: Int
  spellSave_in: [Int!]
  spellSave_not_in: [Int!]
  spellSave_lt: Int
  spellSave_lte: Int
  spellSave_gt: Int
  spellSave_gte: Int
  thirdLevelSpells: Int
  thirdLevelSpells_not: Int
  thirdLevelSpells_in: [Int!]
  thirdLevelSpells_not_in: [Int!]
  thirdLevelSpells_lt: Int
  thirdLevelSpells_lte: Int
  thirdLevelSpells_gt: Int
  thirdLevelSpells_gte: Int
  toHitBonus: Int
  toHitBonus_not: Int
  toHitBonus_in: [Int!]
  toHitBonus_not_in: [Int!]
  toHitBonus_lt: Int
  toHitBonus_lte: Int
  toHitBonus_gt: Int
  toHitBonus_gte: Int
  AND: [CreatureWhereInput!]
  OR: [CreatureWhereInput!]
  NOT: [CreatureWhereInput!]
}

input CreatureWhereUniqueInput {
  id: Int
}

type Encounter {
  id: Int!
  encounterCreature(where: EncounterCreatureWhereInput, orderBy: EncounterCreatureOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EncounterCreature!]
  name: String!
}

type EncounterConnection {
  pageInfo: PageInfo!
  edges: [EncounterEdge]!
  aggregate: AggregateEncounter!
}

input EncounterCreateInput {
  encounterCreature: EncounterCreatureCreateManyInput
  name: String!
}

type EncounterCreature {
  id: Int!
}

type EncounterCreatureConnection {
  pageInfo: PageInfo!
  edges: [EncounterCreatureEdge]!
  aggregate: AggregateEncounterCreature!
}

input EncounterCreatureCreateManyInput {
  connect: [EncounterCreatureWhereUniqueInput!]
}

type EncounterCreatureEdge {
  node: EncounterCreature!
  cursor: String!
}

enum EncounterCreatureOrderByInput {
  id_ASC
  id_DESC
}

type EncounterCreaturePreviousValues {
  id: Int!
}

input EncounterCreatureScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  AND: [EncounterCreatureScalarWhereInput!]
  OR: [EncounterCreatureScalarWhereInput!]
  NOT: [EncounterCreatureScalarWhereInput!]
}

type EncounterCreatureSubscriptionPayload {
  mutation: MutationType!
  node: EncounterCreature
  updatedFields: [String!]
  previousValues: EncounterCreaturePreviousValues
}

input EncounterCreatureSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: EncounterCreatureWhereInput
  AND: [EncounterCreatureSubscriptionWhereInput!]
  OR: [EncounterCreatureSubscriptionWhereInput!]
  NOT: [EncounterCreatureSubscriptionWhereInput!]
}

input EncounterCreatureUpdateManyInput {
  delete: [EncounterCreatureWhereUniqueInput!]
  connect: [EncounterCreatureWhereUniqueInput!]
  set: [EncounterCreatureWhereUniqueInput!]
  disconnect: [EncounterCreatureWhereUniqueInput!]
  deleteMany: [EncounterCreatureScalarWhereInput!]
}

input EncounterCreatureWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  AND: [EncounterCreatureWhereInput!]
  OR: [EncounterCreatureWhereInput!]
  NOT: [EncounterCreatureWhereInput!]
}

input EncounterCreatureWhereUniqueInput {
  id: Int
}

type EncounterEdge {
  node: Encounter!
  cursor: String!
}

enum EncounterOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
}

type EncounterPreviousValues {
  id: Int!
  name: String!
}

type EncounterSubscriptionPayload {
  mutation: MutationType!
  node: Encounter
  updatedFields: [String!]
  previousValues: EncounterPreviousValues
}

input EncounterSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: EncounterWhereInput
  AND: [EncounterSubscriptionWhereInput!]
  OR: [EncounterSubscriptionWhereInput!]
  NOT: [EncounterSubscriptionWhereInput!]
}

input EncounterUpdateInput {
  encounterCreature: EncounterCreatureUpdateManyInput
  name: String
}

input EncounterUpdateManyMutationInput {
  name: String
}

input EncounterWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  encounterCreature_every: EncounterCreatureWhereInput
  encounterCreature_some: EncounterCreatureWhereInput
  encounterCreature_none: EncounterCreatureWhereInput
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  AND: [EncounterWhereInput!]
  OR: [EncounterWhereInput!]
  NOT: [EncounterWhereInput!]
}

input EncounterWhereUniqueInput {
  id: Int
}

scalar Long

type Mutation {
  createCreature(data: CreatureCreateInput!): Creature!
  updateCreature(data: CreatureUpdateInput!, where: CreatureWhereUniqueInput!): Creature
  updateManyCreatures(data: CreatureUpdateManyMutationInput!, where: CreatureWhereInput): BatchPayload!
  upsertCreature(where: CreatureWhereUniqueInput!, create: CreatureCreateInput!, update: CreatureUpdateInput!): Creature!
  deleteCreature(where: CreatureWhereUniqueInput!): Creature
  deleteManyCreatures(where: CreatureWhereInput): BatchPayload!
  createEncounter(data: EncounterCreateInput!): Encounter!
  updateEncounter(data: EncounterUpdateInput!, where: EncounterWhereUniqueInput!): Encounter
  updateManyEncounters(data: EncounterUpdateManyMutationInput!, where: EncounterWhereInput): BatchPayload!
  upsertEncounter(where: EncounterWhereUniqueInput!, create: EncounterCreateInput!, update: EncounterUpdateInput!): Encounter!
  deleteEncounter(where: EncounterWhereUniqueInput!): Encounter
  deleteManyEncounters(where: EncounterWhereInput): BatchPayload!
  createEncounterCreature: EncounterCreature!
  deleteEncounterCreature(where: EncounterCreatureWhereUniqueInput!): EncounterCreature
  deleteManyEncounterCreatures(where: EncounterCreatureWhereInput): BatchPayload!
  createParty(data: PartyCreateInput!): Party!
  updateParty(data: PartyUpdateInput!, where: PartyWhereUniqueInput!): Party
  updateManyParties(data: PartyUpdateManyMutationInput!, where: PartyWhereInput): BatchPayload!
  upsertParty(where: PartyWhereUniqueInput!, create: PartyCreateInput!, update: PartyUpdateInput!): Party!
  deleteParty(where: PartyWhereUniqueInput!): Party
  deleteManyParties(where: PartyWhereInput): BatchPayload!
  createSavedParty(data: SavedPartyCreateInput!): SavedParty!
  updateSavedParty(data: SavedPartyUpdateInput!, where: SavedPartyWhereUniqueInput!): SavedParty
  updateManySavedParties(data: SavedPartyUpdateManyMutationInput!, where: SavedPartyWhereInput): BatchPayload!
  upsertSavedParty(where: SavedPartyWhereUniqueInput!, create: SavedPartyCreateInput!, update: SavedPartyUpdateInput!): SavedParty!
  deleteSavedParty(where: SavedPartyWhereUniqueInput!): SavedParty
  deleteManySavedParties(where: SavedPartyWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Party {
  id: Int!
  armorClass: Int
  attackDiceType: Int
  attackHitDieNumber: Int
  attackNameAndType: String
  attackPointsAdd: Int
  eighthLevelSpells: Int
  fifthLevelSpells: Int
  firstLevelSpells: Int
  fourthLevelSpells: Int
  hitDiceNumber: Int
  hitDiceType: Int
  hitPoints: Int
  hitPointsAdd: Int
  imageUrl: String
  initiativeBonus: Int
  movementSpeed: Int
  name: String!
  ninthLevelSpells: Int
  savedPartyId: SavedParty
  secondAttackDiceType: Int
  secondAttackHitDieNumber: Int
  secondAttackNameAndType: String
  secondAttackPointsAdd: Int
  secondLevelSpells: Int
  secondToHitBonus: Int
  seventhLevelSpells: Int
  sixthLevelSpells: Int
  spellAttack: Int
  spellSave: Int
  thirdLevelSpells: Int
  toHitBonus: Int
}

type PartyConnection {
  pageInfo: PageInfo!
  edges: [PartyEdge]!
  aggregate: AggregateParty!
}

input PartyCreateInput {
  armorClass: Int
  attackDiceType: Int
  attackHitDieNumber: Int
  attackNameAndType: String
  attackPointsAdd: Int
  eighthLevelSpells: Int
  fifthLevelSpells: Int
  firstLevelSpells: Int
  fourthLevelSpells: Int
  hitDiceNumber: Int
  hitDiceType: Int
  hitPoints: Int
  hitPointsAdd: Int
  imageUrl: String
  initiativeBonus: Int
  movementSpeed: Int
  name: String!
  ninthLevelSpells: Int
  savedPartyId: SavedPartyCreateOneWithoutPartiesInput
  secondAttackDiceType: Int
  secondAttackHitDieNumber: Int
  secondAttackNameAndType: String
  secondAttackPointsAdd: Int
  secondLevelSpells: Int
  secondToHitBonus: Int
  seventhLevelSpells: Int
  sixthLevelSpells: Int
  spellAttack: Int
  spellSave: Int
  thirdLevelSpells: Int
  toHitBonus: Int
}

input PartyCreateManyWithoutSavedPartyIdInput {
  create: [PartyCreateWithoutSavedPartyIdInput!]
  connect: [PartyWhereUniqueInput!]
}

input PartyCreateWithoutSavedPartyIdInput {
  armorClass: Int
  attackDiceType: Int
  attackHitDieNumber: Int
  attackNameAndType: String
  attackPointsAdd: Int
  eighthLevelSpells: Int
  fifthLevelSpells: Int
  firstLevelSpells: Int
  fourthLevelSpells: Int
  hitDiceNumber: Int
  hitDiceType: Int
  hitPoints: Int
  hitPointsAdd: Int
  imageUrl: String
  initiativeBonus: Int
  movementSpeed: Int
  name: String!
  ninthLevelSpells: Int
  secondAttackDiceType: Int
  secondAttackHitDieNumber: Int
  secondAttackNameAndType: String
  secondAttackPointsAdd: Int
  secondLevelSpells: Int
  secondToHitBonus: Int
  seventhLevelSpells: Int
  sixthLevelSpells: Int
  spellAttack: Int
  spellSave: Int
  thirdLevelSpells: Int
  toHitBonus: Int
}

type PartyEdge {
  node: Party!
  cursor: String!
}

enum PartyOrderByInput {
  id_ASC
  id_DESC
  armorClass_ASC
  armorClass_DESC
  attackDiceType_ASC
  attackDiceType_DESC
  attackHitDieNumber_ASC
  attackHitDieNumber_DESC
  attackNameAndType_ASC
  attackNameAndType_DESC
  attackPointsAdd_ASC
  attackPointsAdd_DESC
  eighthLevelSpells_ASC
  eighthLevelSpells_DESC
  fifthLevelSpells_ASC
  fifthLevelSpells_DESC
  firstLevelSpells_ASC
  firstLevelSpells_DESC
  fourthLevelSpells_ASC
  fourthLevelSpells_DESC
  hitDiceNumber_ASC
  hitDiceNumber_DESC
  hitDiceType_ASC
  hitDiceType_DESC
  hitPoints_ASC
  hitPoints_DESC
  hitPointsAdd_ASC
  hitPointsAdd_DESC
  imageUrl_ASC
  imageUrl_DESC
  initiativeBonus_ASC
  initiativeBonus_DESC
  movementSpeed_ASC
  movementSpeed_DESC
  name_ASC
  name_DESC
  ninthLevelSpells_ASC
  ninthLevelSpells_DESC
  secondAttackDiceType_ASC
  secondAttackDiceType_DESC
  secondAttackHitDieNumber_ASC
  secondAttackHitDieNumber_DESC
  secondAttackNameAndType_ASC
  secondAttackNameAndType_DESC
  secondAttackPointsAdd_ASC
  secondAttackPointsAdd_DESC
  secondLevelSpells_ASC
  secondLevelSpells_DESC
  secondToHitBonus_ASC
  secondToHitBonus_DESC
  seventhLevelSpells_ASC
  seventhLevelSpells_DESC
  sixthLevelSpells_ASC
  sixthLevelSpells_DESC
  spellAttack_ASC
  spellAttack_DESC
  spellSave_ASC
  spellSave_DESC
  thirdLevelSpells_ASC
  thirdLevelSpells_DESC
  toHitBonus_ASC
  toHitBonus_DESC
}

type PartyPreviousValues {
  id: Int!
  armorClass: Int
  attackDiceType: Int
  attackHitDieNumber: Int
  attackNameAndType: String
  attackPointsAdd: Int
  eighthLevelSpells: Int
  fifthLevelSpells: Int
  firstLevelSpells: Int
  fourthLevelSpells: Int
  hitDiceNumber: Int
  hitDiceType: Int
  hitPoints: Int
  hitPointsAdd: Int
  imageUrl: String
  initiativeBonus: Int
  movementSpeed: Int
  name: String!
  ninthLevelSpells: Int
  secondAttackDiceType: Int
  secondAttackHitDieNumber: Int
  secondAttackNameAndType: String
  secondAttackPointsAdd: Int
  secondLevelSpells: Int
  secondToHitBonus: Int
  seventhLevelSpells: Int
  sixthLevelSpells: Int
  spellAttack: Int
  spellSave: Int
  thirdLevelSpells: Int
  toHitBonus: Int
}

input PartyScalarWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  armorClass: Int
  armorClass_not: Int
  armorClass_in: [Int!]
  armorClass_not_in: [Int!]
  armorClass_lt: Int
  armorClass_lte: Int
  armorClass_gt: Int
  armorClass_gte: Int
  attackDiceType: Int
  attackDiceType_not: Int
  attackDiceType_in: [Int!]
  attackDiceType_not_in: [Int!]
  attackDiceType_lt: Int
  attackDiceType_lte: Int
  attackDiceType_gt: Int
  attackDiceType_gte: Int
  attackHitDieNumber: Int
  attackHitDieNumber_not: Int
  attackHitDieNumber_in: [Int!]
  attackHitDieNumber_not_in: [Int!]
  attackHitDieNumber_lt: Int
  attackHitDieNumber_lte: Int
  attackHitDieNumber_gt: Int
  attackHitDieNumber_gte: Int
  attackNameAndType: String
  attackNameAndType_not: String
  attackNameAndType_in: [String!]
  attackNameAndType_not_in: [String!]
  attackNameAndType_lt: String
  attackNameAndType_lte: String
  attackNameAndType_gt: String
  attackNameAndType_gte: String
  attackNameAndType_contains: String
  attackNameAndType_not_contains: String
  attackNameAndType_starts_with: String
  attackNameAndType_not_starts_with: String
  attackNameAndType_ends_with: String
  attackNameAndType_not_ends_with: String
  attackPointsAdd: Int
  attackPointsAdd_not: Int
  attackPointsAdd_in: [Int!]
  attackPointsAdd_not_in: [Int!]
  attackPointsAdd_lt: Int
  attackPointsAdd_lte: Int
  attackPointsAdd_gt: Int
  attackPointsAdd_gte: Int
  eighthLevelSpells: Int
  eighthLevelSpells_not: Int
  eighthLevelSpells_in: [Int!]
  eighthLevelSpells_not_in: [Int!]
  eighthLevelSpells_lt: Int
  eighthLevelSpells_lte: Int
  eighthLevelSpells_gt: Int
  eighthLevelSpells_gte: Int
  fifthLevelSpells: Int
  fifthLevelSpells_not: Int
  fifthLevelSpells_in: [Int!]
  fifthLevelSpells_not_in: [Int!]
  fifthLevelSpells_lt: Int
  fifthLevelSpells_lte: Int
  fifthLevelSpells_gt: Int
  fifthLevelSpells_gte: Int
  firstLevelSpells: Int
  firstLevelSpells_not: Int
  firstLevelSpells_in: [Int!]
  firstLevelSpells_not_in: [Int!]
  firstLevelSpells_lt: Int
  firstLevelSpells_lte: Int
  firstLevelSpells_gt: Int
  firstLevelSpells_gte: Int
  fourthLevelSpells: Int
  fourthLevelSpells_not: Int
  fourthLevelSpells_in: [Int!]
  fourthLevelSpells_not_in: [Int!]
  fourthLevelSpells_lt: Int
  fourthLevelSpells_lte: Int
  fourthLevelSpells_gt: Int
  fourthLevelSpells_gte: Int
  hitDiceNumber: Int
  hitDiceNumber_not: Int
  hitDiceNumber_in: [Int!]
  hitDiceNumber_not_in: [Int!]
  hitDiceNumber_lt: Int
  hitDiceNumber_lte: Int
  hitDiceNumber_gt: Int
  hitDiceNumber_gte: Int
  hitDiceType: Int
  hitDiceType_not: Int
  hitDiceType_in: [Int!]
  hitDiceType_not_in: [Int!]
  hitDiceType_lt: Int
  hitDiceType_lte: Int
  hitDiceType_gt: Int
  hitDiceType_gte: Int
  hitPoints: Int
  hitPoints_not: Int
  hitPoints_in: [Int!]
  hitPoints_not_in: [Int!]
  hitPoints_lt: Int
  hitPoints_lte: Int
  hitPoints_gt: Int
  hitPoints_gte: Int
  hitPointsAdd: Int
  hitPointsAdd_not: Int
  hitPointsAdd_in: [Int!]
  hitPointsAdd_not_in: [Int!]
  hitPointsAdd_lt: Int
  hitPointsAdd_lte: Int
  hitPointsAdd_gt: Int
  hitPointsAdd_gte: Int
  imageUrl: String
  imageUrl_not: String
  imageUrl_in: [String!]
  imageUrl_not_in: [String!]
  imageUrl_lt: String
  imageUrl_lte: String
  imageUrl_gt: String
  imageUrl_gte: String
  imageUrl_contains: String
  imageUrl_not_contains: String
  imageUrl_starts_with: String
  imageUrl_not_starts_with: String
  imageUrl_ends_with: String
  imageUrl_not_ends_with: String
  initiativeBonus: Int
  initiativeBonus_not: Int
  initiativeBonus_in: [Int!]
  initiativeBonus_not_in: [Int!]
  initiativeBonus_lt: Int
  initiativeBonus_lte: Int
  initiativeBonus_gt: Int
  initiativeBonus_gte: Int
  movementSpeed: Int
  movementSpeed_not: Int
  movementSpeed_in: [Int!]
  movementSpeed_not_in: [Int!]
  movementSpeed_lt: Int
  movementSpeed_lte: Int
  movementSpeed_gt: Int
  movementSpeed_gte: Int
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  ninthLevelSpells: Int
  ninthLevelSpells_not: Int
  ninthLevelSpells_in: [Int!]
  ninthLevelSpells_not_in: [Int!]
  ninthLevelSpells_lt: Int
  ninthLevelSpells_lte: Int
  ninthLevelSpells_gt: Int
  ninthLevelSpells_gte: Int
  secondAttackDiceType: Int
  secondAttackDiceType_not: Int
  secondAttackDiceType_in: [Int!]
  secondAttackDiceType_not_in: [Int!]
  secondAttackDiceType_lt: Int
  secondAttackDiceType_lte: Int
  secondAttackDiceType_gt: Int
  secondAttackDiceType_gte: Int
  secondAttackHitDieNumber: Int
  secondAttackHitDieNumber_not: Int
  secondAttackHitDieNumber_in: [Int!]
  secondAttackHitDieNumber_not_in: [Int!]
  secondAttackHitDieNumber_lt: Int
  secondAttackHitDieNumber_lte: Int
  secondAttackHitDieNumber_gt: Int
  secondAttackHitDieNumber_gte: Int
  secondAttackNameAndType: String
  secondAttackNameAndType_not: String
  secondAttackNameAndType_in: [String!]
  secondAttackNameAndType_not_in: [String!]
  secondAttackNameAndType_lt: String
  secondAttackNameAndType_lte: String
  secondAttackNameAndType_gt: String
  secondAttackNameAndType_gte: String
  secondAttackNameAndType_contains: String
  secondAttackNameAndType_not_contains: String
  secondAttackNameAndType_starts_with: String
  secondAttackNameAndType_not_starts_with: String
  secondAttackNameAndType_ends_with: String
  secondAttackNameAndType_not_ends_with: String
  secondAttackPointsAdd: Int
  secondAttackPointsAdd_not: Int
  secondAttackPointsAdd_in: [Int!]
  secondAttackPointsAdd_not_in: [Int!]
  secondAttackPointsAdd_lt: Int
  secondAttackPointsAdd_lte: Int
  secondAttackPointsAdd_gt: Int
  secondAttackPointsAdd_gte: Int
  secondLevelSpells: Int
  secondLevelSpells_not: Int
  secondLevelSpells_in: [Int!]
  secondLevelSpells_not_in: [Int!]
  secondLevelSpells_lt: Int
  secondLevelSpells_lte: Int
  secondLevelSpells_gt: Int
  secondLevelSpells_gte: Int
  secondToHitBonus: Int
  secondToHitBonus_not: Int
  secondToHitBonus_in: [Int!]
  secondToHitBonus_not_in: [Int!]
  secondToHitBonus_lt: Int
  secondToHitBonus_lte: Int
  secondToHitBonus_gt: Int
  secondToHitBonus_gte: Int
  seventhLevelSpells: Int
  seventhLevelSpells_not: Int
  seventhLevelSpells_in: [Int!]
  seventhLevelSpells_not_in: [Int!]
  seventhLevelSpells_lt: Int
  seventhLevelSpells_lte: Int
  seventhLevelSpells_gt: Int
  seventhLevelSpells_gte: Int
  sixthLevelSpells: Int
  sixthLevelSpells_not: Int
  sixthLevelSpells_in: [Int!]
  sixthLevelSpells_not_in: [Int!]
  sixthLevelSpells_lt: Int
  sixthLevelSpells_lte: Int
  sixthLevelSpells_gt: Int
  sixthLevelSpells_gte: Int
  spellAttack: Int
  spellAttack_not: Int
  spellAttack_in: [Int!]
  spellAttack_not_in: [Int!]
  spellAttack_lt: Int
  spellAttack_lte: Int
  spellAttack_gt: Int
  spellAttack_gte: Int
  spellSave: Int
  spellSave_not: Int
  spellSave_in: [Int!]
  spellSave_not_in: [Int!]
  spellSave_lt: Int
  spellSave_lte: Int
  spellSave_gt: Int
  spellSave_gte: Int
  thirdLevelSpells: Int
  thirdLevelSpells_not: Int
  thirdLevelSpells_in: [Int!]
  thirdLevelSpells_not_in: [Int!]
  thirdLevelSpells_lt: Int
  thirdLevelSpells_lte: Int
  thirdLevelSpells_gt: Int
  thirdLevelSpells_gte: Int
  toHitBonus: Int
  toHitBonus_not: Int
  toHitBonus_in: [Int!]
  toHitBonus_not_in: [Int!]
  toHitBonus_lt: Int
  toHitBonus_lte: Int
  toHitBonus_gt: Int
  toHitBonus_gte: Int
  AND: [PartyScalarWhereInput!]
  OR: [PartyScalarWhereInput!]
  NOT: [PartyScalarWhereInput!]
}

type PartySubscriptionPayload {
  mutation: MutationType!
  node: Party
  updatedFields: [String!]
  previousValues: PartyPreviousValues
}

input PartySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: PartyWhereInput
  AND: [PartySubscriptionWhereInput!]
  OR: [PartySubscriptionWhereInput!]
  NOT: [PartySubscriptionWhereInput!]
}

input PartyUpdateInput {
  armorClass: Int
  attackDiceType: Int
  attackHitDieNumber: Int
  attackNameAndType: String
  attackPointsAdd: Int
  eighthLevelSpells: Int
  fifthLevelSpells: Int
  firstLevelSpells: Int
  fourthLevelSpells: Int
  hitDiceNumber: Int
  hitDiceType: Int
  hitPoints: Int
  hitPointsAdd: Int
  imageUrl: String
  initiativeBonus: Int
  movementSpeed: Int
  name: String
  ninthLevelSpells: Int
  savedPartyId: SavedPartyUpdateOneWithoutPartiesInput
  secondAttackDiceType: Int
  secondAttackHitDieNumber: Int
  secondAttackNameAndType: String
  secondAttackPointsAdd: Int
  secondLevelSpells: Int
  secondToHitBonus: Int
  seventhLevelSpells: Int
  sixthLevelSpells: Int
  spellAttack: Int
  spellSave: Int
  thirdLevelSpells: Int
  toHitBonus: Int
}

input PartyUpdateManyDataInput {
  armorClass: Int
  attackDiceType: Int
  attackHitDieNumber: Int
  attackNameAndType: String
  attackPointsAdd: Int
  eighthLevelSpells: Int
  fifthLevelSpells: Int
  firstLevelSpells: Int
  fourthLevelSpells: Int
  hitDiceNumber: Int
  hitDiceType: Int
  hitPoints: Int
  hitPointsAdd: Int
  imageUrl: String
  initiativeBonus: Int
  movementSpeed: Int
  name: String
  ninthLevelSpells: Int
  secondAttackDiceType: Int
  secondAttackHitDieNumber: Int
  secondAttackNameAndType: String
  secondAttackPointsAdd: Int
  secondLevelSpells: Int
  secondToHitBonus: Int
  seventhLevelSpells: Int
  sixthLevelSpells: Int
  spellAttack: Int
  spellSave: Int
  thirdLevelSpells: Int
  toHitBonus: Int
}

input PartyUpdateManyMutationInput {
  armorClass: Int
  attackDiceType: Int
  attackHitDieNumber: Int
  attackNameAndType: String
  attackPointsAdd: Int
  eighthLevelSpells: Int
  fifthLevelSpells: Int
  firstLevelSpells: Int
  fourthLevelSpells: Int
  hitDiceNumber: Int
  hitDiceType: Int
  hitPoints: Int
  hitPointsAdd: Int
  imageUrl: String
  initiativeBonus: Int
  movementSpeed: Int
  name: String
  ninthLevelSpells: Int
  secondAttackDiceType: Int
  secondAttackHitDieNumber: Int
  secondAttackNameAndType: String
  secondAttackPointsAdd: Int
  secondLevelSpells: Int
  secondToHitBonus: Int
  seventhLevelSpells: Int
  sixthLevelSpells: Int
  spellAttack: Int
  spellSave: Int
  thirdLevelSpells: Int
  toHitBonus: Int
}

input PartyUpdateManyWithoutSavedPartyIdInput {
  create: [PartyCreateWithoutSavedPartyIdInput!]
  delete: [PartyWhereUniqueInput!]
  connect: [PartyWhereUniqueInput!]
  set: [PartyWhereUniqueInput!]
  disconnect: [PartyWhereUniqueInput!]
  update: [PartyUpdateWithWhereUniqueWithoutSavedPartyIdInput!]
  upsert: [PartyUpsertWithWhereUniqueWithoutSavedPartyIdInput!]
  deleteMany: [PartyScalarWhereInput!]
  updateMany: [PartyUpdateManyWithWhereNestedInput!]
}

input PartyUpdateManyWithWhereNestedInput {
  where: PartyScalarWhereInput!
  data: PartyUpdateManyDataInput!
}

input PartyUpdateWithoutSavedPartyIdDataInput {
  armorClass: Int
  attackDiceType: Int
  attackHitDieNumber: Int
  attackNameAndType: String
  attackPointsAdd: Int
  eighthLevelSpells: Int
  fifthLevelSpells: Int
  firstLevelSpells: Int
  fourthLevelSpells: Int
  hitDiceNumber: Int
  hitDiceType: Int
  hitPoints: Int
  hitPointsAdd: Int
  imageUrl: String
  initiativeBonus: Int
  movementSpeed: Int
  name: String
  ninthLevelSpells: Int
  secondAttackDiceType: Int
  secondAttackHitDieNumber: Int
  secondAttackNameAndType: String
  secondAttackPointsAdd: Int
  secondLevelSpells: Int
  secondToHitBonus: Int
  seventhLevelSpells: Int
  sixthLevelSpells: Int
  spellAttack: Int
  spellSave: Int
  thirdLevelSpells: Int
  toHitBonus: Int
}

input PartyUpdateWithWhereUniqueWithoutSavedPartyIdInput {
  where: PartyWhereUniqueInput!
  data: PartyUpdateWithoutSavedPartyIdDataInput!
}

input PartyUpsertWithWhereUniqueWithoutSavedPartyIdInput {
  where: PartyWhereUniqueInput!
  update: PartyUpdateWithoutSavedPartyIdDataInput!
  create: PartyCreateWithoutSavedPartyIdInput!
}

input PartyWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  armorClass: Int
  armorClass_not: Int
  armorClass_in: [Int!]
  armorClass_not_in: [Int!]
  armorClass_lt: Int
  armorClass_lte: Int
  armorClass_gt: Int
  armorClass_gte: Int
  attackDiceType: Int
  attackDiceType_not: Int
  attackDiceType_in: [Int!]
  attackDiceType_not_in: [Int!]
  attackDiceType_lt: Int
  attackDiceType_lte: Int
  attackDiceType_gt: Int
  attackDiceType_gte: Int
  attackHitDieNumber: Int
  attackHitDieNumber_not: Int
  attackHitDieNumber_in: [Int!]
  attackHitDieNumber_not_in: [Int!]
  attackHitDieNumber_lt: Int
  attackHitDieNumber_lte: Int
  attackHitDieNumber_gt: Int
  attackHitDieNumber_gte: Int
  attackNameAndType: String
  attackNameAndType_not: String
  attackNameAndType_in: [String!]
  attackNameAndType_not_in: [String!]
  attackNameAndType_lt: String
  attackNameAndType_lte: String
  attackNameAndType_gt: String
  attackNameAndType_gte: String
  attackNameAndType_contains: String
  attackNameAndType_not_contains: String
  attackNameAndType_starts_with: String
  attackNameAndType_not_starts_with: String
  attackNameAndType_ends_with: String
  attackNameAndType_not_ends_with: String
  attackPointsAdd: Int
  attackPointsAdd_not: Int
  attackPointsAdd_in: [Int!]
  attackPointsAdd_not_in: [Int!]
  attackPointsAdd_lt: Int
  attackPointsAdd_lte: Int
  attackPointsAdd_gt: Int
  attackPointsAdd_gte: Int
  eighthLevelSpells: Int
  eighthLevelSpells_not: Int
  eighthLevelSpells_in: [Int!]
  eighthLevelSpells_not_in: [Int!]
  eighthLevelSpells_lt: Int
  eighthLevelSpells_lte: Int
  eighthLevelSpells_gt: Int
  eighthLevelSpells_gte: Int
  fifthLevelSpells: Int
  fifthLevelSpells_not: Int
  fifthLevelSpells_in: [Int!]
  fifthLevelSpells_not_in: [Int!]
  fifthLevelSpells_lt: Int
  fifthLevelSpells_lte: Int
  fifthLevelSpells_gt: Int
  fifthLevelSpells_gte: Int
  firstLevelSpells: Int
  firstLevelSpells_not: Int
  firstLevelSpells_in: [Int!]
  firstLevelSpells_not_in: [Int!]
  firstLevelSpells_lt: Int
  firstLevelSpells_lte: Int
  firstLevelSpells_gt: Int
  firstLevelSpells_gte: Int
  fourthLevelSpells: Int
  fourthLevelSpells_not: Int
  fourthLevelSpells_in: [Int!]
  fourthLevelSpells_not_in: [Int!]
  fourthLevelSpells_lt: Int
  fourthLevelSpells_lte: Int
  fourthLevelSpells_gt: Int
  fourthLevelSpells_gte: Int
  hitDiceNumber: Int
  hitDiceNumber_not: Int
  hitDiceNumber_in: [Int!]
  hitDiceNumber_not_in: [Int!]
  hitDiceNumber_lt: Int
  hitDiceNumber_lte: Int
  hitDiceNumber_gt: Int
  hitDiceNumber_gte: Int
  hitDiceType: Int
  hitDiceType_not: Int
  hitDiceType_in: [Int!]
  hitDiceType_not_in: [Int!]
  hitDiceType_lt: Int
  hitDiceType_lte: Int
  hitDiceType_gt: Int
  hitDiceType_gte: Int
  hitPoints: Int
  hitPoints_not: Int
  hitPoints_in: [Int!]
  hitPoints_not_in: [Int!]
  hitPoints_lt: Int
  hitPoints_lte: Int
  hitPoints_gt: Int
  hitPoints_gte: Int
  hitPointsAdd: Int
  hitPointsAdd_not: Int
  hitPointsAdd_in: [Int!]
  hitPointsAdd_not_in: [Int!]
  hitPointsAdd_lt: Int
  hitPointsAdd_lte: Int
  hitPointsAdd_gt: Int
  hitPointsAdd_gte: Int
  imageUrl: String
  imageUrl_not: String
  imageUrl_in: [String!]
  imageUrl_not_in: [String!]
  imageUrl_lt: String
  imageUrl_lte: String
  imageUrl_gt: String
  imageUrl_gte: String
  imageUrl_contains: String
  imageUrl_not_contains: String
  imageUrl_starts_with: String
  imageUrl_not_starts_with: String
  imageUrl_ends_with: String
  imageUrl_not_ends_with: String
  initiativeBonus: Int
  initiativeBonus_not: Int
  initiativeBonus_in: [Int!]
  initiativeBonus_not_in: [Int!]
  initiativeBonus_lt: Int
  initiativeBonus_lte: Int
  initiativeBonus_gt: Int
  initiativeBonus_gte: Int
  movementSpeed: Int
  movementSpeed_not: Int
  movementSpeed_in: [Int!]
  movementSpeed_not_in: [Int!]
  movementSpeed_lt: Int
  movementSpeed_lte: Int
  movementSpeed_gt: Int
  movementSpeed_gte: Int
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  ninthLevelSpells: Int
  ninthLevelSpells_not: Int
  ninthLevelSpells_in: [Int!]
  ninthLevelSpells_not_in: [Int!]
  ninthLevelSpells_lt: Int
  ninthLevelSpells_lte: Int
  ninthLevelSpells_gt: Int
  ninthLevelSpells_gte: Int
  savedPartyId: SavedPartyWhereInput
  secondAttackDiceType: Int
  secondAttackDiceType_not: Int
  secondAttackDiceType_in: [Int!]
  secondAttackDiceType_not_in: [Int!]
  secondAttackDiceType_lt: Int
  secondAttackDiceType_lte: Int
  secondAttackDiceType_gt: Int
  secondAttackDiceType_gte: Int
  secondAttackHitDieNumber: Int
  secondAttackHitDieNumber_not: Int
  secondAttackHitDieNumber_in: [Int!]
  secondAttackHitDieNumber_not_in: [Int!]
  secondAttackHitDieNumber_lt: Int
  secondAttackHitDieNumber_lte: Int
  secondAttackHitDieNumber_gt: Int
  secondAttackHitDieNumber_gte: Int
  secondAttackNameAndType: String
  secondAttackNameAndType_not: String
  secondAttackNameAndType_in: [String!]
  secondAttackNameAndType_not_in: [String!]
  secondAttackNameAndType_lt: String
  secondAttackNameAndType_lte: String
  secondAttackNameAndType_gt: String
  secondAttackNameAndType_gte: String
  secondAttackNameAndType_contains: String
  secondAttackNameAndType_not_contains: String
  secondAttackNameAndType_starts_with: String
  secondAttackNameAndType_not_starts_with: String
  secondAttackNameAndType_ends_with: String
  secondAttackNameAndType_not_ends_with: String
  secondAttackPointsAdd: Int
  secondAttackPointsAdd_not: Int
  secondAttackPointsAdd_in: [Int!]
  secondAttackPointsAdd_not_in: [Int!]
  secondAttackPointsAdd_lt: Int
  secondAttackPointsAdd_lte: Int
  secondAttackPointsAdd_gt: Int
  secondAttackPointsAdd_gte: Int
  secondLevelSpells: Int
  secondLevelSpells_not: Int
  secondLevelSpells_in: [Int!]
  secondLevelSpells_not_in: [Int!]
  secondLevelSpells_lt: Int
  secondLevelSpells_lte: Int
  secondLevelSpells_gt: Int
  secondLevelSpells_gte: Int
  secondToHitBonus: Int
  secondToHitBonus_not: Int
  secondToHitBonus_in: [Int!]
  secondToHitBonus_not_in: [Int!]
  secondToHitBonus_lt: Int
  secondToHitBonus_lte: Int
  secondToHitBonus_gt: Int
  secondToHitBonus_gte: Int
  seventhLevelSpells: Int
  seventhLevelSpells_not: Int
  seventhLevelSpells_in: [Int!]
  seventhLevelSpells_not_in: [Int!]
  seventhLevelSpells_lt: Int
  seventhLevelSpells_lte: Int
  seventhLevelSpells_gt: Int
  seventhLevelSpells_gte: Int
  sixthLevelSpells: Int
  sixthLevelSpells_not: Int
  sixthLevelSpells_in: [Int!]
  sixthLevelSpells_not_in: [Int!]
  sixthLevelSpells_lt: Int
  sixthLevelSpells_lte: Int
  sixthLevelSpells_gt: Int
  sixthLevelSpells_gte: Int
  spellAttack: Int
  spellAttack_not: Int
  spellAttack_in: [Int!]
  spellAttack_not_in: [Int!]
  spellAttack_lt: Int
  spellAttack_lte: Int
  spellAttack_gt: Int
  spellAttack_gte: Int
  spellSave: Int
  spellSave_not: Int
  spellSave_in: [Int!]
  spellSave_not_in: [Int!]
  spellSave_lt: Int
  spellSave_lte: Int
  spellSave_gt: Int
  spellSave_gte: Int
  thirdLevelSpells: Int
  thirdLevelSpells_not: Int
  thirdLevelSpells_in: [Int!]
  thirdLevelSpells_not_in: [Int!]
  thirdLevelSpells_lt: Int
  thirdLevelSpells_lte: Int
  thirdLevelSpells_gt: Int
  thirdLevelSpells_gte: Int
  toHitBonus: Int
  toHitBonus_not: Int
  toHitBonus_in: [Int!]
  toHitBonus_not_in: [Int!]
  toHitBonus_lt: Int
  toHitBonus_lte: Int
  toHitBonus_gt: Int
  toHitBonus_gte: Int
  AND: [PartyWhereInput!]
  OR: [PartyWhereInput!]
  NOT: [PartyWhereInput!]
}

input PartyWhereUniqueInput {
  id: Int
}

type Query {
  creature(where: CreatureWhereUniqueInput!): Creature
  creatures(where: CreatureWhereInput, orderBy: CreatureOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Creature]!
  creaturesConnection(where: CreatureWhereInput, orderBy: CreatureOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CreatureConnection!
  encounter(where: EncounterWhereUniqueInput!): Encounter
  encounters(where: EncounterWhereInput, orderBy: EncounterOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Encounter]!
  encountersConnection(where: EncounterWhereInput, orderBy: EncounterOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EncounterConnection!
  encounterCreature(where: EncounterCreatureWhereUniqueInput!): EncounterCreature
  encounterCreatures(where: EncounterCreatureWhereInput, orderBy: EncounterCreatureOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [EncounterCreature]!
  encounterCreaturesConnection(where: EncounterCreatureWhereInput, orderBy: EncounterCreatureOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): EncounterCreatureConnection!
  party(where: PartyWhereUniqueInput!): Party
  parties(where: PartyWhereInput, orderBy: PartyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Party]!
  partiesConnection(where: PartyWhereInput, orderBy: PartyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PartyConnection!
  savedParty(where: SavedPartyWhereUniqueInput!): SavedParty
  savedParties(where: SavedPartyWhereInput, orderBy: SavedPartyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SavedParty]!
  savedPartiesConnection(where: SavedPartyWhereInput, orderBy: SavedPartyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SavedPartyConnection!
  node(id: ID!): Node
}

type SavedParty {
  id: Int!
  name: String!
  parties(where: PartyWhereInput, orderBy: PartyOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Party!]
}

type SavedPartyConnection {
  pageInfo: PageInfo!
  edges: [SavedPartyEdge]!
  aggregate: AggregateSavedParty!
}

input SavedPartyCreateInput {
  name: String!
  parties: PartyCreateManyWithoutSavedPartyIdInput
}

input SavedPartyCreateOneWithoutPartiesInput {
  create: SavedPartyCreateWithoutPartiesInput
  connect: SavedPartyWhereUniqueInput
}

input SavedPartyCreateWithoutPartiesInput {
  name: String!
}

type SavedPartyEdge {
  node: SavedParty!
  cursor: String!
}

enum SavedPartyOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
}

type SavedPartyPreviousValues {
  id: Int!
  name: String!
}

type SavedPartySubscriptionPayload {
  mutation: MutationType!
  node: SavedParty
  updatedFields: [String!]
  previousValues: SavedPartyPreviousValues
}

input SavedPartySubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SavedPartyWhereInput
  AND: [SavedPartySubscriptionWhereInput!]
  OR: [SavedPartySubscriptionWhereInput!]
  NOT: [SavedPartySubscriptionWhereInput!]
}

input SavedPartyUpdateInput {
  name: String
  parties: PartyUpdateManyWithoutSavedPartyIdInput
}

input SavedPartyUpdateManyMutationInput {
  name: String
}

input SavedPartyUpdateOneWithoutPartiesInput {
  create: SavedPartyCreateWithoutPartiesInput
  update: SavedPartyUpdateWithoutPartiesDataInput
  upsert: SavedPartyUpsertWithoutPartiesInput
  delete: Boolean
  disconnect: Boolean
  connect: SavedPartyWhereUniqueInput
}

input SavedPartyUpdateWithoutPartiesDataInput {
  name: String
}

input SavedPartyUpsertWithoutPartiesInput {
  update: SavedPartyUpdateWithoutPartiesDataInput!
  create: SavedPartyCreateWithoutPartiesInput!
}

input SavedPartyWhereInput {
  id: Int
  id_not: Int
  id_in: [Int!]
  id_not_in: [Int!]
  id_lt: Int
  id_lte: Int
  id_gt: Int
  id_gte: Int
  name: String
  name_not: String
  name_in: [String!]
  name_not_in: [String!]
  name_lt: String
  name_lte: String
  name_gt: String
  name_gte: String
  name_contains: String
  name_not_contains: String
  name_starts_with: String
  name_not_starts_with: String
  name_ends_with: String
  name_not_ends_with: String
  parties_every: PartyWhereInput
  parties_some: PartyWhereInput
  parties_none: PartyWhereInput
  AND: [SavedPartyWhereInput!]
  OR: [SavedPartyWhereInput!]
  NOT: [SavedPartyWhereInput!]
}

input SavedPartyWhereUniqueInput {
  id: Int
}

type Subscription {
  creature(where: CreatureSubscriptionWhereInput): CreatureSubscriptionPayload
  encounter(where: EncounterSubscriptionWhereInput): EncounterSubscriptionPayload
  encounterCreature(where: EncounterCreatureSubscriptionWhereInput): EncounterCreatureSubscriptionPayload
  party(where: PartySubscriptionWhereInput): PartySubscriptionPayload
  savedParty(where: SavedPartySubscriptionWhereInput): SavedPartySubscriptionPayload
}
`
      }
    